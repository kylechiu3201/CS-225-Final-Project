<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="airports_8h" kind="file" language="C++">
    <compoundname>airports.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">queue</includes>
    <includes local="no">stack</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes refid="airline_8h" local="yes">../airline/airline.h</includes>
    <includes refid="airport_8h" local="yes">../airport/airport.h</includes>
    <includes refid="edge_8h" local="yes">../graph/edge.h</includes>
    <includes refid="graph_8h" local="yes">../graph/graph.h</includes>
    <incdepgraph>
      <node id="19">
        <label>list</label>
      </node>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>queue</label>
      </node>
      <node id="14">
        <label>../graph/graph.h</label>
        <link refid="graph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="11">
        <label>../airport/airport.h</label>
        <link refid="airport_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>map</label>
      </node>
      <node id="7">
        <label>unordered_set</label>
      </node>
      <node id="12">
        <label>../graph/edge.h</label>
        <link refid="edge_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="4">
        <label>stack</label>
      </node>
      <node id="23">
        <label>utility</label>
      </node>
      <node id="22">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>../airline/airline.h</label>
        <link refid="airline_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="15">
        <label>climits</label>
      </node>
      <node id="1">
        <label>airports/airports.h</label>
        <link refid="airports_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>set</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innerclass refid="classAirports" prot="public">Airports</innerclass>
    <innerclass refid="structAirports_1_1dijkstras__graph" prot="public">Airports::dijkstras_graph</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../airline/airline.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../airport/airport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../graph/edge.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../graph/graph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::unordered_map;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classAirports" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAirports" kindref="compound">Airports</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classAirports_1acddd4e0844de9718621bcb65c2bbd923" kindref="member">Airports</ref>(std::string<sp/>filename,<sp/>std::string<sp/>fileair,<sp/>std::string<sp/>fileroute);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAirports_1a4c7801db9d9d030694896b7ace7e4d62" kindref="member">bfs</ref>(<ref refid="classAirport" kindref="compound">Vertex</ref><sp/>v,<sp/>vector&lt;Vertex&gt;&amp;<sp/>path);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>vector&lt;vector&lt;Vertex&gt;&gt;<sp/><ref refid="classAirports_1a4c7801db9d9d030694896b7ace7e4d62" kindref="member">bfs</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAirports_1ab64e235519e96fbfd58ae6045f088b0f" kindref="member">bfs_to_text</ref>(vector&lt;vector&lt;Vertex&gt;&gt;<sp/>v);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>vector&lt;Airport&gt;<sp/><ref refid="classAirports_1a6ab5d68cc26c5b201000fc20d8f08679" kindref="member">shortest_path</ref>(std::string<sp/>B);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classAirports_1a65496328754ac42865e74d3ae5e75e57" kindref="member">shortest_dist</ref>(std::string<sp/>B);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/><ref refid="classAirports_1a598a4a8033e662d576043e0fa1b461ea" kindref="member">create_dijkstras</ref>(std::string<sp/>A);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAirports_1aa2e942d705f14dd5d43161977de8a17f" kindref="member">shortest_to_text</ref>(std::string<sp/>B);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classGraph" kindref="compound">Graph</ref>&amp;<sp/><ref refid="classAirports_1a09e694ebcac791327c5969d744359bb0" kindref="member">get_graph</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>vector&lt;Vertex&gt;<sp/><ref refid="classAirports_1a2a336ca779e3c392aab21a9837d5223b" kindref="member">getVertices</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>vector&lt;Edge&gt;<sp/><ref refid="classAirports_1a03f8769b03be0ad9e3d86b7e2e363904" kindref="member">getEdges</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>unordered_map&lt;int,<sp/>Airport&gt;<sp/><ref refid="classAirports_1a048b54cb44483f4829f67d236d0509e6" kindref="member">get_id_map</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>unordered_map&lt;std::string,<sp/>Airport&gt;<sp/><ref refid="classAirports_1a7129e22c60acf8b8e79da7eef9959886" kindref="member">get_port_map</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classAirports_1a3aad12a8519830591aaf6cb6311ca4bc" kindref="member">airlinesAdded</ref>(std::string<sp/>airline);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;Vertex&gt;&gt;<sp/><ref refid="classAirports_1a1e6394edcd3de2004e3b4b60cbebb434" kindref="member">getStronglyConnected</ref>(std::string<sp/>airline);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classAirports_1aa51338d2d41bc643c2e1a6c7dfd34b0d" kindref="member">exportStronglyConnected</ref>(map&lt;<ref refid="classAirline" kindref="compound">Airline</ref>,<sp/>vector&lt;vector&lt;Vertex&gt;&gt;&gt;<sp/>scc);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structAirports_1_1dijkstras__graph" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structAirports_1_1dijkstras__graph" kindref="compound">dijkstras_graph</ref><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAirports_1_1dijkstras__graph" kindref="compound">dijkstras_graph</ref>()<sp/>:<sp/>graph(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>unordered_map&lt;int,<sp/>long<sp/>double&gt;<sp/>distances;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>unordered_map&lt;int,<sp/>int&gt;<sp/>parents;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraph" kindref="compound">Graph</ref><sp/>graph;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classGraph" kindref="compound">Graph</ref><sp/>g_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="classAirport" kindref="compound">Airport</ref><sp/>startingPort_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Airport&gt;<sp/>port_map;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;int,<sp/>Airport&gt;<sp/>id_map;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>std::map&lt;Airline,<sp/>Graph&gt;<sp/>lineGraph;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Airline&gt;<sp/>air_map;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>std::map&lt;Airline,<sp/>std::set&lt;std::pair&lt;Vertex,<sp/>Vertex&gt;&gt;&gt;<sp/>linetoedges;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>std::vector&lt;Airline&gt;<sp/>airlines;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>std::map&lt;Vertex,<sp/>Vertex&gt;<sp/>vertices;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>vector&lt;Edge&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="structAirports_1_1dijkstras__graph" kindref="compound">dijkstras_graph</ref><sp/>d_graph;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>path_helper(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>vector&lt;Airport&gt;&amp;<sp/>vec);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tarjanHelper(<ref refid="classAirport" kindref="compound">Vertex</ref><sp/>v,<sp/>std::map&lt;Vertex,<sp/>int&gt;&amp;<sp/>discover,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Vertex,<sp/>int&gt;&amp;<sp/>low,<sp/>std::stack&lt;Vertex&gt;&amp;<sp/>s,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Vertex,<sp/>bool&gt;&amp;<sp/>stackHasNode,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;Vertex&gt;&gt;&amp;<sp/>stronglyConnected,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraph" kindref="compound">Graph</ref><sp/>g);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="airports/airports.h"/>
  </compounddef>
</doxygen>
